version: 2.1

orbs:
  python: circleci/python@2.1.1
  jira: circleci/jira@1.3.1
  aws-cli: circleci/aws-cli@1.2.1
  node: circleci/node@5.0.3


jobs:
  backend-build-and-test:
    executor:
      name: python/default
      tag: '3.9'
    working_directory: ~/project/Backend
    steps:
      - checkout:
          path: ~/project/Backend

      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "./Backend/requirements.txt" }}
      # - restore_cache:
      #       keys:
      #         - v1-dependencies-{{ checksum "./Backend/requirements.txt" }}
      #         # fallback to using the latest cache if no exact match is found
      #         - v1-dependencies-
      # - checkout

      - run:
          name: Find requirements.txt
          command: find . -regex '.*requirements.txt$'

      - run: 
          name: Checking of backend folders
          command: ls ./Backend -a
      - run:
          name: Install dependencies
          command: pip3 install -r ./Backend/requirements.txt

      # - run: cd ./Backend/
    
      # - run:
      #     name: Go back to backend
      #     command: cd Backend

      - run:
          name: Database Setup
          command: echo $DATABASE_URL

      # - run: 
      #     name: Database setup
      #     command: python3.9 ./Backend/database.py

      - run:
          name: Run Test File
          # command: uvicorn Backend.main:app --reload
          command: python ./Backend/testrun.py
      - run:
          name: Run test scripts

          command: python ./Backend/Tests/main_test.py

      # - run:
      #     name: Run the API
      #     command: uvicorn Backend.main:app --reload  

      - run:
          name: Add backend to Zipfile
          command: |
              cd /home/circleci/project/Backend/Backend/
              zip -g ./function.zip -r .


      - persist_to_workspace:
          root: ./Backend
          paths:
            - function.zip

  backend-deploy-dev:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Upload to S3 
          command: aws s3 cp function.zip s3://spm-bigbucket/function.zip
      - run:        
          name: Deploy new Lambda        
          command: aws lambda update-function-code --function-name spm_fastapi --s3-bucket spm-bigbucket --s3-key function.zip
      

  frontend_build: # this can be any name you choose
    executor: node/default # use the default executor defined within the orb
    working_directory: ~/project/Frontend/frontend
    steps:
      - checkout:
          path: ~/project/Frontend
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install 
          name: Import Frontend Dependencies
      - run:
          command: npm run build
          name: Build Frontend into Production
      # - run:
      #     name: Add frontend to Zipfile
      #     command: |
      #         cd /home/circleci/project/Frontend/frontend/dist/
      #         zip -g ../frontend.zip -r .
      - persist_to_workspace:
          root: ./
          paths:
            - .

  frontend-deploy-dev:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Deploy on S3 
          command: aws s3 sync ./dist s3://spm-smallbucket

  frontend-integration-test:
    executor: node/default # use the default executor defined within the orb
    working_directory: ~/project/Frontend/frontend
    docker:
      - image: mcr.microsoft.com/playwright:v1.27.1-focal
    steps:
      - checkout:
          path: ~/project/Frontend
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Download playwright dependencies
          command: npm ci
      - run:
          command: npm run test
          name: Run playwright dev servers
      
workflows:
  build-test-and-deploy:
    jobs:
      - backend-build-and-test:
          filters:
            branches:
              only:
                - "circleci-testing"
                - "refactoring-test-case"
                - "main"
                - "frontend-testing"
          context:
            - Database
            - Deployment
          post-steps:
            - jira/notify
      - backend-deploy-dev:
          context:
            - Deployment
          requires:
            - backend-build-and-test    
          filters:        
            branches:
              only:
                - "circleci-testing"
                - "refactoring-test-case"
                - "main"
                - "frontend-testing"
      - frontend_build:
          context:
            - Deployment
          requires:
            - backend-build-and-test
            - backend-deploy-dev  
          filters:        
            branches:
              only:
                - "circleci-testing"
                - "main"
                - "frontend-testing"
      - frontend-deploy-dev:
          context:
            - Deployment
          requires:
            - frontend_build
            - backend-build-and-test
            - backend-deploy-dev
          filters:        
            branches:
              only:
                - "circleci-testing"
                - "main"
                - "frontend-testing"
      - frontend-integration-test:
          context:
            - Deployment
          requires:
            - frontend_build
            - backend-build-and-test
            - backend-deploy-dev
            - frontend-deploy-dev
          filters:        
            branches:
              only:
                - "circleci-testing"
                - "main"
                - "frontend-testing"
                
